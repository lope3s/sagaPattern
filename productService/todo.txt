the order service should emit an dropCratItem event to the cart service and put the order in the PENDING state (available states: PENDING, CANCELLED, APPROVED).

the order service when receiving the cancelOrder event must attempt to change the order state to CANCELLED.

the order service when receiving the approveOrder event must attempt to change the order state to APPROVED.

[x] - the product service, when receiving the dropStock event must attempt to drop the stock of the selected product.
[x] - if everything goes well it must emit an approveOrder event to the order service.
[x] - if something goes wrong it must emit an restoreCartItem to the cartService.

The queue needs to be persistent in order to the Event Sourcing patter to work.
